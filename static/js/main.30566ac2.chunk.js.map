{"version":3,"sources":["components/Rol/Rol.tsx","components/initFirebase.js","components/remoteData.ts","components/App/App.js","index.js"],"names":["Rol","useState","currentTab","setCurrentTab","searching","tabButton","category","onClick","className","toString","user","JSON","parse","localStorage","getItem","name","src","imageUrl","removeItem","window","location","reload","type","placeholder","join","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","console","log","database","App","responseGoogle","response","profileObj","setItem","stringify","alert","clientId","onSuccess","onFailure","cookiePolicy","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RA+KeA,MAzKf,WAiDE,MAAoCC,mBAAmB,cAAvD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAEMC,GAFN,KAEkB,SAACC,GACjB,OACE,wBACEC,QAAS,kBAAMJ,EAAcG,IAC7BE,UAAWN,IAAeI,EAAW,SAAW,GAFlD,SAIGA,EAASG,eAKVC,EAAuBC,KAAKC,MAAMC,aAAaC,QAAQ,SAAW,IAExE,OACE,qBAAKN,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UAEE,sBAAKA,UAAU,eAAf,UAEGE,EAAKK,KAEN,qBACEP,UAAU,kBACVQ,IAAKN,EAAKO,WAEZ,wBACET,UAAU,mBACVD,QAAS,WACPM,aAAaK,WAAW,QACxBC,OAAOC,SAASC,UAJpB,wBAWF,sBAAKb,UAAU,SAAf,UAGE,sBAAKA,UAAU,SAAf,yBAEE,uBAAOA,UAAU,eAAec,KAAK,OAAOC,YAAY,iBAI1D,sBAAKf,UAAU,OAAf,UACIH,EAAU,cACVA,EAAU,UACVA,EAAU,SACVA,EAAU,kBACVA,EAAU,UACVA,EAAU,UACVA,EAAU,SACVA,EAAU,gBAGd,qBAAKG,UAAW,CAAC,sBAAuBJ,GAAa,WAAWoB,KAAK,OAcrE,sBAAKhB,UAAW,CAAC,cAAeJ,GAAa,WAAWoB,KAAK,KAA7D,UACE,gCACE,qBAAKhB,UAAU,OAAf,eACA,oCACA,oCACA,qBAAKA,UAAU,OAAf,eACA,qBAAKA,UAAU,OAAf,eACA,oCACA,oCACA,qBAAKA,UAAU,OAAf,eACA,qBAAKA,UAAU,OAAf,eACA,uCAEF,gCACE,oCACA,qBAAKA,UAAU,OAAf,eACA,oCACA,oCACA,oCACA,qBAAKA,UAAU,OAAf,eACA,oCACA,oCACA,qBAAKA,UAAU,OAAf,eACA,qBAAKA,UAAU,OAAf,kBAEF,gCACE,oCACA,oCACA,qBAAKA,UAAU,OAAf,eACA,qBAAKA,UAAU,OAAf,eACA,oCACA,oCACA,qBAAKA,UAAU,OAAf,eACA,oCACA,oCACA,qD,kCCvJe,IAAzBiB,IAASC,KAAKC,QAChBF,IAASG,cAVE,CAEbC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,oEACbC,UAAW,eAMTC,QAAQC,IAAI,sCAEZD,QAAQC,IAAI,4CCbLT,IAASU,W,MAApB,I,iBC8BeC,MA5Bf,WAEE,IAAMC,EAAiB,SAACC,GACtBL,QAAQC,IAAII,EAASC,YACjBD,EAASC,YACX1B,aAAa2B,QAAQ,OAAQ7B,KAAK8B,UAAUH,EAASC,aACrDpB,OAAOC,SAASC,UAEbF,OAAOuB,MAAM,+BAGpB,OACE,sBAAKlC,UAAU,MAAf,WACIK,aAAaC,QAAQ,SAAW,cAAE,IAAF,CAEhC6B,SAAS,2EACTC,UAAWP,EACXQ,UAAWR,EACXS,aAAc,uBAKfjC,aAAaC,QAAQ,SAAW,cAAC,EAAD,QCtBvCiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.30566ac2.chunk.js","sourcesContent":["import './Rol.css';\r\nimport './RolLayout.css';\r\nimport './RolLayoutDesktop.css';\r\nimport { useEffect, useState } from \"react\";\r\nimport { Category, readUsers, writeUser, writeThing } from '../remoteData';\r\n\r\nfunction Rol() {\r\n\r\n  type GoogleUserType = {\r\n    googleId: string;\r\n    imageUrl: string;\r\n    email: string;\r\n    name: string;\r\n    givenName: string;\r\n    familyName: string;\r\n  }\r\n\r\n  // type UserType = {\r\n  //   id: number,\r\n  //   name: string,\r\n  //   password: string,\r\n  // }\r\n\r\n  // const [users, setUsers] = useState<UserType[]>([]);\r\n  // const [name, setName] = useState(\"pakko\");\r\n\r\n  // useEffect(() => {\r\n  //   return readUsers(userss => {setUsers(userss);});\r\n  // }, [])\r\n\r\n  // const firebasetest = () => {\r\n  //   return (\r\n  //     <div>\r\n\r\n  //       <input\r\n  //         type=\"text\"\r\n  //         onChange={e => setName(e.target.value)}/>\r\n\r\n  //       <button\r\n  //         onClick={() => {\r\n  //           writeUser({name, password: \"pass\"});\r\n  //           writeThing(\"characters\", 'a', 'e', 'i');\r\n  //         }}>\r\n  //         Write User!\r\n  //       </button>\r\n\r\n  //       {[...users].map(x => {\r\n  //         return <p key={x.id}>Name: {x.name}</p>\r\n  //       })}\r\n\r\n  //       baba\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\n  const [currentTab, setCurrentTab] = useState<Category>('characters');\r\n  const [searching, setSearching] = useState(true);\r\n\r\n  const tabButton = (category: Category) => {\r\n    return (\r\n      <button\r\n        onClick={() => setCurrentTab(category)}\r\n        className={currentTab === category ? \"active\" : \"\"}>\r\n        {/* {number === 7 ? '‚≠ê' : getTabName(number)} */}\r\n        {category.toString()}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  const user: GoogleUserType = JSON.parse(localStorage.getItem(\"user\") || \"\");\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"container\">\r\n        <div className=\"subcontainer\">\r\n\r\n          <div className=\"user-account\">\r\n\r\n            {user.name}\r\n\r\n            <img\r\n              className=\"profile-picture\"\r\n              src={user.imageUrl} />\r\n\r\n            <button\r\n              className=\"userLogoffButton\"\r\n              onClick={() => {\r\n                localStorage.removeItem(\"user\");\r\n                window.location.reload();\r\n              }}>\r\n                LOG OFF\r\n            </button>\r\n\r\n          </div>\r\n\r\n          <div className=\"editor\">\r\n\r\n            {/* FILTER */}\r\n            <div className=\"filter\">\r\n              üîç\r\n              <input className=\"input-filter\" type=\"text\" placeholder=\"Buscar...\"></input>\r\n            </div>\r\n\r\n            {/* TABS */}\r\n            <div className=\"tabs\">\r\n              { tabButton('characters') }\r\n              { tabButton('skills') }\r\n              { tabButton('items') }\r\n              { tabButton('status effects') }\r\n              { tabButton('places') }\r\n              { tabButton('events') }\r\n              { tabButton('audio') }\r\n              { tabButton('favorites') }\r\n            </div>\r\n\r\n            <div className={['tab-content-options', searching && 'blue-bg'].join(' ')}>\r\n\r\n              {/* <button className=\"other-button\">\r\n                ‚ûï CREAR { getTabName(currentTab).toUpperCase() }\r\n              </button>\r\n\r\n              {(currentTab === 0 || currentTab === 4 || currentTab === 7 || currentTab === 11)\r\n              && \r\n              <button className=\"other-button\">\r\n                üé≤ GENERAR {getTabName(currentTab).toUpperCase()} ALEATORIO\r\n              </button>} */}\r\n            \r\n            </div>\r\n\r\n            <div className={['tab-content', searching && 'blue-bg'].join(' ')}>\r\n              <div>\r\n                <div className=\"open\">1</div>\r\n                <div>2</div>\r\n                <div>3</div>\r\n                <div className=\"open\">4</div>\r\n                <div className=\"open\">5</div>\r\n                <div>1</div>\r\n                <div>2</div>\r\n                <div className=\"open\">3</div>\r\n                <div className=\"open\">4</div>\r\n                <div>5</div>\r\n              </div>\r\n              <div>\r\n                <div>1</div>\r\n                <div className=\"open\">2</div>\r\n                <div>3</div>\r\n                <div>4</div>\r\n                <div>5</div>\r\n                <div className=\"open\">1</div>\r\n                <div>2</div>\r\n                <div>3</div>\r\n                <div className=\"open\">4</div>\r\n                <div className=\"open\">5</div>\r\n              </div>\r\n              <div>\r\n                <div>1</div>\r\n                <div>2</div>\r\n                <div className=\"open\">3</div>\r\n                <div className=\"open\">4</div>\r\n                <div>5</div>\r\n                <div>1</div>\r\n                <div className=\"open\">2</div>\r\n                <div>3</div>\r\n                <div>4</div>\r\n                <div>5</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rol;\r\n","import firebase from 'firebase/compat/app';\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/database\";\r\n\r\nconst config = {\r\n  // apiKey: \"AIzaSyBEX5HLshjPq5Vf1HshGGexTzgqIUV22cw\",\r\n  apiKey: \"AIzaSyDpyzYQKJZIIFSxiMiEwIRhD6RG9PWKhlE\",\r\n  authDomain: \"role-2a806.firebaseapp.com\",\r\n  databaseURL: \"https://role-2a806-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"role-2a806\",\r\n};\r\n\r\n// function initFirebase() {\r\n  if (firebase.apps.length === 0) {\r\n    firebase.initializeApp(config);\r\n    console.log(\"dababase has been initialized now\");\r\n  } else {\r\n    console.log(\"I guess database was already initialized\");\r\n  }\r\n// }\r\n\r\n// initFirebase();\r\n\r\n\r\n\r\n\r\n\r\n// firebase.auth().signInAnonymously().catch(function(error) {\r\n//   // Handle Errors here.\r\n//   var errorCode = error.code;\r\n//   var errorMessage = error.message;\r\n//   // ...\r\n//   console.log(\"auth error --- \" + errorCode + \" | \" + errorMessage);\r\n// });\r\n// firebase.auth().onAuthStateChanged(function(user) {\r\n//   if (user) {\r\n//     const app = firebase.app();\r\n//     // User is signed in.\r\n//     var isAnonymous = user.isAnonymous;\r\n//     var uid = user.uid;\r\n//     var userRef = app.dataInfo.child(app.users);\r\n    \r\n//     var useridRef = userRef.child(app.userid);\r\n    \r\n//     useridRef.set({\r\n//       locations: \"\",\r\n//       theme: \"\",\r\n//       colorScheme: \"\",\r\n//       food: \"\"\r\n//     });\r\n\r\n//     console.log(\"user logged in i think --- anon:\" + isAnonymous + \" | uid:\" + uid + \" | ref:\" + userRef);\r\n\r\n//   } else {\r\n//     console.log(\"no user logged in\");\r\n//     // User is signed out.\r\n//     // ...\r\n//   }\r\n//   // ...\r\n// });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport { firebase };","// =================================================== FIREBASE =================================================== //\r\n\r\nimport { firebase } from './initFirebase';\r\n\r\nconst db = firebase.database();\r\n\r\n// =================================================== TYPES =================================================== //\r\n\r\ntype UserType = {\r\n  name: string,\r\n  password: string,\r\n}\r\n\r\nexport type Category =\r\n  'characters' |\r\n  'skills' |\r\n  'items' |\r\n  'status effects' |\r\n  'places' |\r\n  'events' |\r\n  'audio' |\r\n  'favorites';\r\n\r\n// =================================================== ERRORS =================================================== //\r\n\r\ntype WriteUserError =\r\n  'success' |\r\n  'password-is-invalid' |\r\n  'name-already-exists';\r\n\r\ntype LoginError =\r\n  'success' |\r\n  'user-doesnt-exist' |\r\n  'password-is-incorrect';\r\n\r\n// =================================================== REGEXPS =================================================== //\r\n\r\n// https://digitalfortress.tech/js/top-15-commonly-used-regex/\r\n\r\nconst usernameRegexp = /^(?=[a-zA-Z0-9._]{8,20}$)(?!.*[_.]{2})[^_.].*[^_.]$/;\r\n\r\n// =================================================== UTIL FUNCTIONS =================================================== //\r\n\r\nconst toArray = (snapshotVal: { [x: string]: any; }) => {\r\n  return [...Object.keys(snapshotVal).map(key => ({\r\n      id: key,\r\n      ...snapshotVal[key]\r\n  }))];\r\n}\r\n\r\n// =================================================== DATA ACCESS AND MANIPULATION FUNCTIONS =================================================== //\r\n\r\n/**\r\n * // Usage example:\r\n * const user = {name: 'aa', password: 'ee'};\r\n * console.log(\"write user \" + user + \" --- \" + writeUser(user).toString());\r\n */\r\nexport const writeUser = (user: UserType): WriteUserError => {\r\n  // check if password is valid\r\n\r\n  // check if name already exists\r\n  let nameExists = false;\r\n  const ref = db.ref('users/');\r\n  ref.on(\"value\", (snapshot) => {\r\n    if (toArray(snapshot.val()).includes((x: UserType) => x.name === user.name)) return 'name-already-exists';\r\n  });\r\n  \r\n  db.ref(\"users\").push().set({\r\n    'name': user.name,\r\n    'password': user.password,\r\n  });\r\n\r\n  return 'success';\r\n}\r\n\r\nexport const readUsers = (setter: { (userss: any): void; (arg0: any[]): void; }) => {\r\n  const ref = db.ref('users/');\r\n  ref.on(\"value\", (snapshot) => {\r\n    setter(toArray(snapshot.val()));\r\n  });\r\n  return () => ref.off();\r\n}\r\n\r\nexport const loginUser = (user:UserType) => {\r\n  const ref = db.ref('users/');\r\n  ref.on(\"value\", (snapshot) => {\r\n    return toArray(snapshot.val()).includes((x: UserType) => x.name === user.name && x.password === user.password);\r\n  });\r\n  return () => ref.off();\r\n}\r\n\r\nexport const writeThing = (\r\n  category: Category,\r\n  title: string,\r\n  desc: string,\r\n  imageURL: string) => {\r\n  db.ref(category).push().set({\r\n    title,\r\n    desc,\r\n    imageURL\r\n  });\r\n}\r\n\r\nexport const readThings = (setter: (arg0: any[]) => void) => {\r\n  const ref = db.ref('users/');\r\n  return ref.on(\"value\", (snapshot) => {\r\n    setter(toArray(snapshot.val()));\r\n    return () => ref.off();\r\n  });\r\n}","import './App.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GoogleLogin from 'react-google-login';\r\nimport Rol from '../Rol/Rol';\r\n\r\nfunction App() {\r\n\r\n  const responseGoogle = (response) => {\r\n    console.log(response.profileObj);\r\n    if (response.profileObj){\r\n      localStorage.setItem(\"user\", JSON.stringify(response.profileObj));\r\n      window.location.reload();\r\n    }\r\n    else window.alert(\"OH NO. SOMETHING IS WRONG.\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {!localStorage.getItem(\"user\") && < GoogleLogin\r\n        // clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\" buttonText=\"Login\"\r\n        clientId=\"557149397568-tid2cbi3kdaln9egknki6s64501h44en.apps.googleusercontent.com\"\r\n        onSuccess={responseGoogle}\r\n        onFailure={responseGoogle}\r\n        cookiePolicy={'single_host_origin'}\r\n        // render={renderProps => (\r\n        //   <button onClick={renderProps.onClick} disabled={renderProps.disabled}>This is my custom Google button</button>\r\n        // )}\r\n        />}\r\n      {localStorage.getItem(\"user\") && <Rol />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Rol from './components/Rol/Rol';\r\nimport { Category, readUsers, writeUser, writeThing } from './components/remoteData';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    {/* <Rol /> */}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}